---
name: Code Quality Checks

on:
  push:
    branches: [main, development]
  pull_request:
    branches: [main, development]

jobs:
  setup:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: [3.7]

    steps:
      - name: get repo
        uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
      - name: Install poetry
        uses: snok/install-poetry@v1.0.0
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

  test:
    needs: setup
    steps:
      - name: Unit & Coverage test with pytest
        run: poetry run pytest
  pythonlint:
    needs: setup
    steps:
      - name: Check style with flake8
        run: poetry run flake8 boxsup_pytorch/ tests/
  format:
    needs: setup
    steps:
      - name: Check format with black
        run: poetry run black --check boxsup_pytorch/ tests/
  typehint:
    needs: setup
    steps:
      - name: Check type hinting with mypy
        run: poetry run mypy --strict --config-file=mypy.ini boxsup_pytorch/
  yamllint:
    needs: setup
    steps:
      - name: Check yaml style with yamllint
        run: poetry run yamllint . -c yamllint-config.yml
